--------------------------  Documented Comments  --------------------------

   A palindromic number is unchanged if its digits are reversed.
   121 or 1221 is a palindrome.

---------------------------------------------------------------------------
Token      const (  37,              )
Token     %ident (   4,          max )
Token          = (  23,              )
Token    %number (   5,          100 )
Token          ; (  20,              )
Token        int (  40,              )
Token     %ident (   4,          sum )
Token          ( (   7,              )
Token        int (  40,              )
Token     %ident (   4,            n )
Token          , (  14,              )
Token        int (  40,              )
Token     %ident (   4,            m )
Token          ) (   8,              )
Token          { (  44,              )
Token        int (  40,              )
Token     %ident (   4,            i )
Token          ; (  20,              )
Token     %ident (   4,        write )
Token          ( (   7,              )
Token     %ident (   4,            n )
Token          ) (   8,              )
Token          ; (  20,              )
Token     %ident (   4,        write )
Token          ( (   7,              )
Token     %ident (   4,            m )
Token          ) (   8,              )
Token          ; (  20,              )
Token     %ident (   4,            i )
Token          = (  23,              )
Token     %ident (   4,            n )
Token          + (  11,              )
Token     %ident (   4,            m )
Token          + (  11,              )
Token     %ident (   4,          max )
Token          ; (  20,              )
Token         if (  39,              )
Token          ( (   7,              )
Token     %ident (   4,            i )
Token         == (  24,              )
Token    %number (   5,            1 )
Token          ) (   8,              )
Token     %ident (   4,            i )
Token          = (  23,              )
Token    %number (   5,          100 )
Token          ; (  20,              )
Token     return (  41,              )
Token     %ident (   4,            i )
Token          ; (  20,              )
Token          } (  46,              )
Token       void (  42,              )
Token     %ident (   4,         main )
Token          ( (   7,              )
Token          ) (   8,              )
Token          { (  44,              )
Token        int (  40,              )
Token     %ident (   4,            x )
Token          ; (  20,              )
Token       char (  47,              )
Token     %ident (   4,            c )
Token          = (  23,              )
Token     %c_lit (  36,          'c' )
Token          ; (  20,              )
Token     double (  48,              )
Token     %ident (   4,            d )
Token          = (  23,              )
Token    %number (   5,         1.50 )
Token          ; (  20,              )
Token     string (  49,              )
Token     %ident (   4,            s )
Token          = (  23,              )
Token     %s_lit (  35,        "str" )
Token          ; (  20,              )
Token        for (  50,              )
Token          ( (   7,              )
Token        int (  40,              )
Token     %ident (   4,            i )
Token          = (  23,              )
Token    %number (   5,            0 )
Token          ; (  20,              )
Token     %ident (   4,            i )
Token          < (  21,              )
Token    %number (   5,            5 )
Token          ; (  20,              )
Token     %ident (   4,            i )
Token         ++ (  12,              )
Token          ) (   8,              )
Token          { (  44,              )
Token         if (  39,              )
Token          ( (   7,              )
Token     %ident (   4,            x )
Token          < (  21,              )
Token    %number (   5,            3 )
Token          ) (   8,              )
Token   continue (  54,              )
Token          ; (  20,              )
Token     %ident (   4,            d )
Token          = (  23,              )
Token    %number (   5,         2.00 )
Token          ; (  20,              )
Token     %ident (   4,            x )
Token         ++ (  12,              )
Token          ; (  20,              )
Token          } (  46,              )
Token     switch (  51,              )
Token          ( (   7,              )
Token     %ident (   4,            c )
Token          ) (   8,              )
Token          { (  44,              )
Token       case (  52,              )
Token     %c_lit (  36,          'c' )
Token          : (  30,              )
Token     %ident (   4,            c )
Token          = (  23,              )
Token     %c_lit (  36,          'b' )
Token          ; (  20,              )
Token      break (  55,              )
Token          ; (  20,              )
Token    default (  53,              )
Token          : (  30,              )
Token     %ident (   4,            c )
Token          = (  23,              )
Token     %c_lit (  36,          'c' )
Token          ; (  20,              )
Token      break (  55,              )
Token          ; (  20,              )
Token          } (  46,              )
Token     %ident (   4,        write )
Token          ( (   7,              )
Token     %ident (   4,          max )
Token          ) (   8,              )
Token          ; (  20,              )
Token     %ident (   4,            x )
Token          = (  23,              )
Token    %number (   5,          333 )
Token          ; (  20,              )
Token     %ident (   4,            x )
Token         ++ (  12,              )
Token          ; (  20,              )
Token     %ident (   4,        write )
Token          ( (   7,              )
Token     %ident (   4,            x )
Token          ) (   8,              )
Token          ; (  20,              )
Token     %ident (   4,            x )
Token          = (  23,              )
Token     %ident (   4,          sum )
Token          ( (   7,              )
Token    %number (   5,           10 )
Token          , (  14,              )
Token    %number (   5,           20 )
Token          ) (   8,              )
Token          ; (  20,              )
Token     %ident (   4,        write )
Token          ( (   7,              )
Token     %ident (   4,            x )
Token          ) (   8,              )
Token          ; (  20,              )
Token          } (  46,              )
Token        eof (  29,              )
